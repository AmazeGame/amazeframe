[
    {ag_base, [
        {session_timeout, 900000000},
        {dirty_write_interval, 300000},
        {include_path, ["ag_database"]}
    ]},
    {ag_database, [
        {driver_pools, [
            mysql_pool,
            redis_pool,
            mongodb_pool,
            mysql_redis_pool,
            mongodb_redis_pool
        ]},

        {mysql_pool, {mysql, mysql_option}},

        {mongodb_pool, {mongodb, mongodb_option}},

        {redis_pool, {redis, redis_option}},

        %%db_cached_pool
        {mysql_redis_pool, {mysql_pool, redis_pool}},
        {mongodb_redis_pool, {mongodb_pool, redis_pool}},

        {mysql_option, {
            [{size, 5}, {max_overflow, 10}],
            [{host, "10.0.205.189"}, {port, 3306}, {database, "test"}, {user, "root"}, {password, "root"}, {keep_alive, true}]
        }},

        {redis_option, {
            [{size, 5}, {max_overflow, 10}],
            [{host, "10.0.205.189"}, {port, 6010}, {database, 10}, {password, ""}, {reconnect_sleep, 100}]
        }},

        {mongodb_option,
            {
                %%indexes
                [
                    {<<"test">>, [
                        {<<"key">>, {<<"name">>, 1}, <<"name">>, <<"_name">>, <<"unique">>, true, <<"dropDups">>, true}
                    ]}
                ],
                {unknown ,["10.0.205.189:27017"]},
                [{pool_size, 50}, {max_overflow, 10}],
                [{database, <<"maze_server1">>}, {w_mode, safe}, {r_mode, slave_ok}]
            }
        }
    ]},
    {eredis_cluster, [
        {init_nodes,[
            {"10.0.205.189",6010}
        ]},
        {pool_size, 5},
        {pool_max_overflow, 0},
        {database, 0},
        {password, ""}
    ]},
    {kernel, [
        {logger_level, debug},
        {logger, [
            {handler, default, logger_std_h, #{
                config => #{sync_mode_qlen=>50, drop_mode_qlen=>500, flush_qlen =>2000, burst_limit_enable=>false},
                level => debug,
                filters => [
                    {gteq_debug, {fun logger_filters:level/2, {log, gteq, debug}}},
                    {gt_error, {fun logger_filters:level/2, {stop, gt, error}}}
                ],
                formatter => {logger_formatter, #{legacy_header => true, single_line => false, template => [time, " [", level, "] ", {pid, [pid], ""}, " ", mfa, ":", line, "\n", msg, "\n"]}}
            }},
            {handler, debug, logger_disk_log_h, #{
                config =>#{sync_mode_qlen=>50, drop_mode_qlen=>500, flush_qlen =>2000, burst_limit_enable=>false, file => "logs/debug.log", type => wrap, max_no_files =>10, max_no_bytes => 10485760},
                level => debug,
                filters => [
                    {debug, {fun logger_filters:level/2, {stop, neq, debug}}}
                ],
                formatter => {logger_formatter, #{legacy_header => true, single_line => false, template => [time, " [", level, "] ", {pid, [pid], ""}, " ", mfa, ":", line, "\n", msg, "\n"]}}
            }},
            {handler, info, logger_disk_log_h, #{
                config =>#{sync_mode_qlen=>50, drop_mode_qlen=>500, flush_qlen =>2000, burst_limit_enable=>false, file => "logs/info.log", type => wrap, max_no_files =>10, max_no_bytes => 10485760},
                level => info,
                filters => [
                    {info, {fun logger_filters:level/2, {log, gteq, info}}},
                    {warning, {fun logger_filters:level/2, {stop, gt, warning}}}
                ],
                formatter => {logger_formatter, #{legacy_header => true, single_line => false, template => [time, " [", level, "] ", {pid, [pid], ""}, " ", mfa, ":", line, "\n", msg, "\n"]}}
            }},
            {handler, error, logger_disk_log_h, #{
                config =>#{sync_mode_qlen=>50, drop_mode_qlen=>500, flush_qlen =>2000, burst_limit_enable=>false, file => "logs/error.log", type => wrap, max_no_files =>10, max_no_bytes => 10485760},
                level => error,
                filters => [
                    {error, {fun logger_filters:level/2, {stop, neq, error}}}
                ],
                formatter => {logger_formatter, #{legacy_header => true, single_line => false, template => [time, " [", level, "] ", {pid, [pid], ""}, " ", mfa, ":", line, "\n", msg, "\n"]}}
            }}
        ]}
    ]}
].
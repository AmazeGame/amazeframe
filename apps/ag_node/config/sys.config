[
    {ag_node, [
        {cluster_name,game_server},
        {node_name_prefix,node}
    ]},
    {ag_baselib, [{include_path, ["ag_node"]}]},
    {ra, [
        {data_dir, "./cluster"}
    ]},
    {ag_idcreator, [
        {id_snowflake, [{dc_id, 1}, {worker_id, 1}]}
    ]},
    {ag_cluster, [
%%        {adapter, ag_cluster_redis_adapter},
        {adapter, ag_cluster_mongodb_adapter},
        %服务器启动是否清除过期数据
        {startcleandata, true},
        {ag_cluster_redis_adapter, [
            {pools, cluster_redis_pool},
            {driver, redis},
            {option,
                {
                    [{size, 5}, {max_overflow, 10}],
                    [{host, "127.0.0.1"}, {port, 6010}, {database, 15}, {password, ""}, {reconnect_sleep, 100}]
                }
            }]
        },
        {ag_cluster_mongodb_adapter, [
            {pools, cluster_mongodb_pool},
            {driver, mongodb},
            {option,
                {
                    %%indexes
                    [],
                    {unknown, ["127.0.0.1:27017"]},
                    [{pool_size, 1}, {max_overflow, 10}],
                    [{database, <<"cluster_test">>}, {w_mode, safe}, {r_mode, slave_ok}]
                }
            }
        ]}
    ]},
    {ag_debuglogger, [
        {console, #{open => true, level => debug}},
        {file, #{
            open => true,
            level => debug,
            log_folder => "logs/",
            max_no_files => 10,
            max_no_bytes => 20485760
        }},
        {logger_config, #{
            sync_mode_qlen => 50,
            drop_mode_qlen => 500,
            flush_qlen => 2000
        }},
%%        {filters, [{ag_logger_filter, {fun ag_logger_filter:dev_log/2, ok}}]},
        {formatter, {ag_logger_flatlog_format, #{map_depth => 3, term_depth => 50}}}
    ]}
].